{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Tesseract from \"tesseract.js\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\n\ninterface ExtractedData {\n  filename: string;\n  date: string;\n  time: string;\n}\n\nexport default function Home() {\n  const [images, setImages] = useState<File[]>([]);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [selectedRegion, setSelectedRegion] = useState<{ x: number; y: number; width: number; height: number } | null>(null);\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [startPoint, setStartPoint] = useState<{ x: number; y: number } | null>(null);\n  const [extractedData, setExtractedData] = useState<ExtractedData[]>([]);\n  const imageRef = useRef<HTMLImageElement | null>(null);\n  const selectionRef = useRef<HTMLDivElement | null>(null);\n\n  // Handle image upload\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setImages(Array.from(e.target.files));\n      setCurrentImageIndex(0);\n      setSelectedRegion(null);\n      setExtractedData([]);\n    }\n  };\n\n  // Mouse events for region selection on first image\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (currentImageIndex !== 0) return; // Only allow selection on first image\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setStartPoint({ x, y });\n    setSelectedRegion({ x, y, width: 0, height: 0 });\n    setIsSelecting(true);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isSelecting || !startPoint) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const newRegion = {\n      x: Math.min(x, startPoint.x),\n      y: Math.min(y, startPoint.y),\n      width: Math.abs(x - startPoint.x),\n      height: Math.abs(y - startPoint.y),\n    };\n    setSelectedRegion(newRegion);\n  };\n\n  const handleMouseUp = () => {\n    if (isSelecting) {\n      setIsSelecting(false);\n      setStartPoint(null);\n    }\n  };\n\n  // Crop image to selected region and return a canvas\n  const cropImageToRegion = (image: HTMLImageElement, region: { x: number; y: number; width: number; height: number }) => {\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const sx = region.x * scaleX;\n    const sy = region.y * scaleY;\n    const sw = region.width * scaleX;\n    const sh = region.height * scaleY;\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = sw;\n    canvas.height = sh;\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      ctx.drawImage(image, sx, sy, sw, sh, 0, 0, sw, sh);\n    }\n    return canvas;\n  };\n\n  // Perform OCR on cropped image canvas\n  const performOCR = async (canvas: HTMLCanvasElement) => {\n    const { data } = await Tesseract.recognize(canvas, \"eng\", {\n      logger: (m: any) => {\n        // console.log(m);\n      },\n    });\n    return data.text;\n  };\n\n  // Parse date and time from OCR text (simple regex for common date/time formats)\n  const parseDateTime = (text: string) => {\n    // Example regex for date and time (adjust as needed)\n    const dateRegex = /(\\d{4}[-\\/]\\d{1,2}[-\\/]\\d{1,2})|(\\d{1,2}[-\\/]\\d{1,2}[-\\/]\\d{4})/;\n    const timeRegex = /(\\d{1,2}:\\d{2}(:\\d{2})?)/;\n\n    const dateMatch = text.match(dateRegex);\n    const timeMatch = text.match(timeRegex);\n\n    return {\n      date: dateMatch ? dateMatch[0] : \"\",\n      time: timeMatch ? timeMatch[0] : \"\",\n    };\n  };\n\n  // Process all images using the selected region\n  const processImages = async () => {\n    if (!selectedRegion) {\n      alert(\"Please select the date/time region on the first image.\");\n      return;\n    }\n    const results: ExtractedData[] = [];\n    for (const file of images) {\n      const img = new Image();\n      const url = URL.createObjectURL(file);\n      await new Promise<void>((resolve) => {\n        img.onload = () => resolve();\n        img.src = url;\n      });\n      const canvas = cropImageToRegion(img, selectedRegion);\n      const ocrText = await performOCR(canvas);\n      const { date, time } = parseDateTime(ocrText);\n      results.push({\n        filename: file.name,\n        date,\n        time,\n      });\n      URL.revokeObjectURL(url);\n    }\n    setExtractedData(results);\n  };\n\n  // Export extracted data to Excel\n  const exportToExcel = () => {\n    if (extractedData.length === 0) {\n      alert(\"No data to export.\");\n      return;\n    }\n    const worksheet = XLSX.utils.json_to_sheet(extractedData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Data\");\n    XLSX.writeFile(workbook, \"extracted_data.xlsx\");\n  };\n\n  // Export extracted data to PDF\n  const exportToPDF = () => {\n    if (extractedData.length === 0) {\n      alert(\"No data to export.\");\n      return;\n    }\n    const doc = new jsPDF();\n    doc.setFontSize(12);\n    doc.text(\"Extracted Image Data\", 10, 10);\n    let y = 20;\n    extractedData.forEach((item, index) => {\n      doc.text(`${index + 1}. ${item.filename} - Date: ${item.date} - Time: ${item.time}`, 10, y);\n      y += 10;\n    });\n    doc.save(\"extracted_data.pdf\");\n  };\n\n  return (\n    <main className=\"space-y-8\">\n      <div className=\"space-y-2\">\n        <h1 className=\"text-4xl font-bold tracking-tight\">Image Date/Time Extractor</h1>\n        <p className=\"text-gray-500\">Upload images and select the date/time region to extract information</p>\n      </div>\n\n      <section className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n            Upload Images (multiple)\n          </label>\n          <input \n            type=\"file\" \n            multiple \n            accept=\"image/*\" \n            onChange={handleImageUpload}\n            className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n          />\n        </div>\n      </section>\n\n      {images.length > 0 && (\n        <section className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <h2 className=\"text-2xl font-semibold tracking-tight\">Select Date/Time Region</h2>\n            <p className=\"text-sm text-gray-500\">Draw a rectangle around the date/time area on the first image</p>\n          </div>\n          <div\n            className=\"relative inline-block border border-gray-200 rounded-lg overflow-hidden shadow-sm\"\n            style={{ maxWidth: \"600px\" }}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseLeave={handleMouseUp}\n          >\n            <img\n              src={URL.createObjectURL(images[currentImageIndex])}\n              alt=\"Selected\"\n              ref={imageRef}\n              className=\"max-w-full max-h-[400px]\"\n              draggable={false}\n            />\n            {selectedRegion && (\n              <div\n                ref={selectionRef}\n                className=\"absolute border-2 border-blue-500 bg-blue-200 bg-opacity-30\"\n                style={{\n                  left: selectedRegion.x,\n                  top: selectedRegion.y,\n                  width: selectedRegion.width,\n                  height: selectedRegion.height,\n                  pointerEvents: \"none\",\n                }}\n              />\n            )}\n          </div>\n          <div className=\"mt-6\">\n            <button\n              onClick={processImages}\n              className=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-black text-white hover:bg-gray-800 h-10 px-4 py-2\"\n            >\n              Extract Date/Time from Images\n            </button>\n          </div>\n        </section>\n      )}\n\n      {extractedData.length > 0 && (\n        <section className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <h2 className=\"text-2xl font-semibold tracking-tight\">Extracted Data</h2>\n            <p className=\"text-sm text-gray-500\">Date and time information extracted from your images</p>\n          </div>\n          \n          <div className=\"rounded-md border\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b bg-gray-50/50\">\n                  <th className=\"h-12 px-4 text-left align-middle font-medium text-gray-500\">Filename</th>\n                  <th className=\"h-12 px-4 text-left align-middle font-medium text-gray-500\">Date</th>\n                  <th className=\"h-12 px-4 text-left align-middle font-medium text-gray-500\">Time</th>\n                </tr>\n              </thead>\n              <tbody>\n                {extractedData.map((item, idx) => (\n                  <tr key={idx} className=\"border-b transition-colors hover:bg-gray-50/50\">\n                    <td className=\"p-4 align-middle\">{item.filename}</td>\n                    <td className=\"p-4 align-middle\">{item.date}</td>\n                    <td className=\"p-4 align-middle\">{item.time}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          <div className=\"flex gap-4\">\n            <button\n              onClick={exportToExcel}\n              className=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-black text-white hover:bg-gray-800 h-10 px-4 py-2\"\n            >\n              Export to Excel\n            </button>\n            <button\n              onClick={exportToPDF}\n              className=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-black text-white hover:bg-gray-800 h-10 px-4 py-2\"\n            >\n              Export to PDF\n            </button>\n          </div>\n        </section>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}